-# = render 'homes/nav', home: @room.home

-# %h2= @room.name
-# %h3= @room.room_type&.name

-# .conditions-tables.pure-g

-#   .pure-u-1.pure-u-md-1-2.pure-u-lg-1-3
-#     = render 'rating', room: @room
-#   .pure-u-1.pure-u-md-1-2.pure-u-lg-1-3
-#     = render 'temperature', room: @room
-#   .pure-u-1.pure-u-md-1-2.pure-u-lg-1-3
-#     = render 'dewpoint', room: @room

-#   .pure-u-1.pure-u-md-1-2.pure-u-lg-1-4
-#     .conditions-table
-#       %h3 Readings
-#       %ul.conditions-table-list
-#         - @readings.each do |reading|
-#           %li
-#             = display_reading reading
-#             = reading.key
-#             %br
-#             = timeago_tag reading.created_at, nojs: true, limit: 100.days.ago


.center
  %h1.sm.narrow-down-only
    %a.back{href: home_rooms_path(@room.home)}>
      %img.svg{alt: "back", src: image_url("icons/back.svg") }/
    Lisefski House
  %section.card.report{class: @room.enough_info_to_perform_rating? ? '' : 'expired' }
    %header
      %h2=@room.name
      %h4=@room.room_type&.name
      %a.head-action{href: edit_room_path(@room)}
        %img.svg{alt: "edit", src: image_url("icons/edit.svg") }/
    .readings
      .reading{class: temperature_quality(@room)}
        -# temp-mid-a
        %span.vis
          %span.loader
        %span.value= display_temperature @room
        %span.label Temperature
        -# %span.time 5 minutes ago
      .reading.hum-mid-a
        %span.vis
          %span.loader
        %span.value= display_humidity @room
        %span.label Humidity
        -# %span.time 5 minutes ago
      .reading.dew-mid
        %span.vis
          %span.loader
        %span.value= display_dewpoint @room
        %span.label Dewpoint
        -# %span.time 5 minutes ago
    .report-card{class: "grade-#{room_quality_level(@room)}" }
      .rating
        %span.grade= @room.rating
        %span.value
          = RatingService.rating_text(@room.rating)
          - unless @room.room_type.present?
            Set room type to enable rating
        %span.label Rating
      %ul.check
        - if @room.below_dewpoint?
          %li Moisture and mould highly like
          %li Reduce humidity to reduce mould
        - elsif @room.near_dewpoint?
          %li Reduce humidity
          %li Temperature is close to dewpoint
        - else
          %li Room is well above dewpoint
        - if @room.dewpoint.present?
          - if @room.dewpoint < 6
            %li Low dewpoint is very good
          - elsif @room.dewpoint < 16
            %li Acceptable dewpoint
          - else
            %li High dewpoint
            %li Keep this room above #{display_dewpoint @room}
          - if @room.room_type
            %li
              This #{@room.room_type.name} room should be warmer than
              %strong= @room.room_type.min_temperature
              C to be comfortable
          - if @room.too_cold?
            %li Too cold
          - else
            %li Comfortable temperature

          -# %a.i.tooltip{href: "#", title: ""}
          -# %h6 Dewpoint
          -# %p When the temperature in this room falls below #{display_dewpoint @room} moisture begins to form on surfaces, leading to mould growth.

          -# %p
          -#   %a{href: "#"} Click for more info
          -# %img.svg{alt: "info", src: image_url("icons/i.svg") }/
        -# %li Room appears healthy, warm,  dry


%section.card
  %header.condensed
    %h2 Readings
    %h4 Past 30 days
    %ul.legend
      %li
        %span.temp
        Temperature
      %li
        %span.hum
        Humidity
  .graph
    .scroller
      -# = line_chart readings_path(home_id: @room.home.id,
      -#   room_id: @room.id, key: 'temperature', start: @start), legend: false, refresh: 60

- @room.sensors.each do |sensor|
  = render 'sensors/card', sensor: sensor
